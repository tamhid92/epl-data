---
- name: Ensure procps is installed.
  package:
    name: "{{ procps_package }}"
    state: present
  when: >
    ansible_distribution != 'Debian'
    or ansible_distribution_major_version | int < 10

# - name: Let iptables see bridged traffic.
#   sysctl:
#     name: "{{ item }}"
#     value: '1'
#     state: present
#   loop:
#     - net.bridge.bridge-nf-call-iptables
#     - net.bridge.bridge-nf-call-ip6tables
#   when: >
#     ansible_distribution != 'Debian'
#     or ansible_distribution_major_version | int < 10

- name: Disable swap (if configured).
  command: swapoff -a

- name: Ensure swap file doesn't exist (if configured).
  file:
    path: /swap.img
    state: absent
  become_user: root

- name: Ensure br_netfilter is enabled.
  modprobe:
    name: br_netfilter
    state: present

- name: Ensure br_netfilter is loaded
  shell: |
    sudo sh -c 'echo "br_netfilter" > /etc/modules-load.d/br_netfilter.conf'

- name: Enable IPv4 packet forwarding
  shell: |
    cat <<EOF | tee /etc/sysctl.d/k8s.conf
    net.ipv4.ip_forward = 1
    EOF
    sysctl --system

- name: Configure cGroup Drivers
  shell: |
    containerd config default | sed 's/SystemdCgroup = false/SystemdCgroup = true/' | sed 's/sandbox_image = "registry.k8s.io\/pause:3.6"/sandbox_image = "registry.k8s.io\/pause3.10"/' | tee /etc/containerd/config.toml

- name: Restart service containerd
  ansible.builtin.service:
    name: containerd
    state: restarted